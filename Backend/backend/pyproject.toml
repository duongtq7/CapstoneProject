[project]
name = "Glimpse_Backend"
version = "0.1.0"
description = "Glimpse is an AI-powered platform for managing and retrieving multimedia data. It uses AI to analyze, extract, and store features from images and videos, enhancing search performance. Glimpse generates embeddings for images, enabling accurate text-based queries and optimizes geolocation data for swift retrieval of location-specific content. Tested on research datasets, Glimpse efficiently organizes and retrieves photos and videos."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0, <=2.9.2",
    "pydantic-core==2.23.4",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "sqlalchemy>=2.0.38",
    "uvicorn>=0.34.0",
    "psycopg2-binary>=2.9.10",
    "qdrant-client>=1.13.3",
    "botocore>=1.37.27",
    "boto3>=1.37.27",
    "python-dotenv>=1.1.0",
    "ipykernel>=6.29.5",
    "pillow>=11.2.1",
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3,<8.0.0",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "pytest-asyncio>=0.23.8",
]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

ignore-init-module-imports = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

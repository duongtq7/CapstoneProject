"""Initial database schema

Revision ID: 2af2e258fe7e
Revises:
Create Date: 2025-04-04 16:12:28.560494

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2af2e258fe7e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('face',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faceembedding',
    sa.Column('embedding_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('face_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['face_id'], ['face.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('searchhistory',
    sa.Column('query', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media',
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('album_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_url'), 'media', ['url'], unique=False)
    op.create_table('keyframe',
    sa.Column('frame_idx', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('media_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mediaembedding',
    sa.Column('embedding_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('media_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mediaface',
    sa.Column('media_id', sa.Uuid(), nullable=False),
    sa.Column('face_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['face_id'], ['face.id'], ),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('media_id', 'face_id')
    )
    op.create_table('mediametadata',
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('fps', sa.Float(), nullable=True),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('resolution', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('gps_latitude', sa.Float(), nullable=True),
    sa.Column('gps_longitude', sa.Float(), nullable=True),
    sa.Column('capture_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('media_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('media_id')
    )
    op.create_table('keyframeface',
    sa.Column('keyframe_id', sa.Uuid(), nullable=False),
    sa.Column('face_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['face_id'], ['face.id'], ),
    sa.ForeignKeyConstraint(['keyframe_id'], ['keyframe.id'], ),
    sa.PrimaryKeyConstraint('keyframe_id', 'face_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('keyframeface')
    op.drop_table('mediametadata')
    op.drop_table('mediaface')
    op.drop_table('mediaembedding')
    op.drop_table('keyframe')
    op.drop_index(op.f('ix_media_url'), table_name='media')
    op.drop_table('media')
    op.drop_table('searchhistory')
    op.drop_table('faceembedding')
    op.drop_table('album')
    op.drop_table('face')
    # ### end Alembic commands ###

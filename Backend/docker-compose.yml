services:

  db:
    image: postgres:12
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  prestart:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./backend
    networks:
      # - traefik-public
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash scripts/prestart.sh
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}

  minio:
    image: quay.io/minio/minio:latest
    ports:
      - ${S3_EXTERNAL_PORT}:${S3_INTERNAL_PORT}
      - ${MINIO_CONSOLE_EXTERNAL_PORT}:${MINIO_CONSOLE_INTERNAL_PORT}
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    expose:
      - ${S3_EXTERNAL_PORT}
      - ${MINIO_CONSOLE_EXTERNAL_PORT}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: server /data --console-address ":${MINIO_CONSOLE_INTERNAL_PORT}"
    restart: unless-stopped

  # Minio client for creating the bucket
  minio-client:
    image: minio/mc:latest
    env_file:
      - .env
    #insure that the minio-client is running before the minio service
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:${S3_INTERNAL_PORT} ${S3_ACCESS_KEY} ${S3_SECRET_KEY};
      /usr/bin/mc mb myminio/${S3_BUCKET_NAME};
      exit 0;
      "

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    ports:
      - 6333:6333 # tcp
      - 6334:6334 # grpc
    volumes:
      - qdrant-data:/qdrant/storage
    restart: always

volumes:
  app-db-data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: ./data/postgres_data
    #   o: bind

  minio-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/minio_data
      o: bind

  minio-config:
    driver: local
    driver_opts:
      type: none
      device: ./data/minio_config
      o: bind

  qdrant-data:
    driver: local
    driver_opts:
      type: none
      device: ./data/qdrant_data
      o: bind
# networks:
  # traefik-public:
  #   # Allow setting it to false for testing
  #   external: true
